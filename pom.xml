<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.thecodeslinger</groupId>
	<artifactId>docker-db-testing</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>docker-db-testing</name>
	<description>Spring Boot demo project for testing database integration with Docker</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<environmentVariables>
						<it-database.port>${it-database.port}</it-database.port>
					</environmentVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test-integration/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/test-integration/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.33.0</version>

				<configuration>
					<dockerHost>http://localhost:2375</dockerHost>

					<images>
						<image>
							<name>test-postgres</name>
							<alias>test-postgres</alias>
							<build>
								<from>postgres:9.4</from>
								<assembly>
									<mode>dir</mode>
									<!-- database startup script -->
									<targetDir>/docker-entrypoint-initdb.d</targetDir>
									<inline>
										<files>
											<file>
												<source>src/test-integration/resources/setup-postgres.sql</source>
											</file>
										</files>
									</inline>
								</assembly>
								<!--env>
									<POSTGRES_PASSWORD>${postgresql.password}</POSTGRES_PASSWORD>
								</env-->
							</build>
							<run>
								<!-- Wait for database up and running -->
								<wait>
									<tcp>
										<ports>
											<port>5432</port>
										</ports>
									</tcp>
								</wait>
							</run>
						</image>
					</images>
				</configuration>

				<executions>
					<execution>
						<!-- start Docker -->
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
						<configuration>
							<images>
								<image>
									<name>test-postgres</name>
									<alias>it-database</alias>
									<run>
										<ports>
											<port>it-database.port:5432</port>
										</ports>
										<wait>
											<log>(?s)database system is ready to accept connections.*database system is ready to accept connections</log>
											<time>20000</time>
										</wait>
									</run>
								</image>
							</images>
						</configuration>
					</execution>
					<execution>
						<!-- stop Docker -->
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
